plugins {
	  id "de.aaschmid.cpd" version "1.1"
}

apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin : 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'


repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	compile 'joda-time:joda-time:2.10'
	testCompile("junit:junit:4.12")	
}

pmd {
	pmdTest.enabled = false
			ruleSets = ["java-basic",
			            "java-braces",
			            "java-clone",
			            "java-codesize",
			            "java-comments",
			            "java-controversial",
			            "java-coupling",
			            "java-design",
			            "java-empty",
			            "java-finalizers",
			            "java-imports",
			            "java-naming",
			            "java-optimizations",
			            "java-strings",
			            "java-unusedcode"]
			            		//toolVersion = '5.8.1'
			            		ignoreFailures = true
}

tasks.withType(Pmd){
	reports {
		xml.enabled true
		html.enabled true
	}
}

test {
	ignoreFailures = true
	
	/* jacoco {
		enabled = false
	} */
}


/* Find bugs */

findbugs{
	findbugsTest.enabled = false
	ignoreFailures = true
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled true
		html.enabled false
		ignoreFailures = true
		// html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
	}
}

/* Check Style */
checkstyle{
	checkstyleTest.enabled = false
	ignoreFailures = true
	toolVersion "8.10.1"	
}

tasks.withType(Checkstyle) {
	reports {
		xml.enabled true
		html.enabled false
		//html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
		ignoreFailures = true
	}
}

/* Cpd */
cpd {
	language = 'cpp'
}

cpdCheck {
	reports {
		text.enabled = false
		xml.enabled = true
	}
	source = sourceSets.main.allJava 
}


/* Jacoco */
jacoco {
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true	
	}
}
